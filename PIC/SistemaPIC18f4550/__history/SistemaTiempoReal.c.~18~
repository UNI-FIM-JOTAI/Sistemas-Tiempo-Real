#include <18F4550.h>
#device adc=8       //Resolucion 8BITS
#use delay(clock=10000000)    //Oscilador de 10Mz
#use rs232(baud=9600, xmit=PIN_C6,rcv=PIN_C7,bits=8,parity=N)  // Configuracion de la comunicacion serial
#fuses HS,NOPROTECT,NOWDT,NOLVP,CPUDIV1,nomclr     // Configuracion de los Fuses

#use FAST_IO(A) 
#use FAST_IO(B)
#use FAST_IO(D)

// Declaracion de Variables


int const lenbuff=10;

int   xbuff=0x00;
char  cbuff[lenbuff];
char  rcvchar=0x00;
char  comando;
int1  flagcmd=0;


void inte_Init()  // interrupcion de puerto serial
{
   enable_interrupts(GLOBAL);
   enable_interrupts(INT_RDA);
}

void addcbuff(char c)   
{
   switch(c)
   {
      case '*':                  // en caso de recibir *, levanta el flag para saber que se termino de enviar un comando.
         cbuff[xbuff++] = c;
         flagcmd = 1;
      break;
      default:
         cbuff[xbuff++] = c;
   }
}



// Interrupcion por comunicacion serial
#INT_RDA
void serial_isr()
{
   //printf("Recibido");     // se envia por Serial una palabra para verificar interrupcion
   rcvchar = 0x00;
   rcvchar = getc();    // se recibe el caracter enviado por la computadora
   addcbuff(rcvchar);
   //printf("%c", rcvchar );
   //delay_us(20);
}

void procesa_cmd(void){             // procesa el ultimo comando guardado, un comando esta comprendido entre $ hasta * 
 
   int i, j=0;                      
   char salida[lenbuff];            // Argumento de comando (si lo tiene)
   disable_interrupts(int_rda);     
   flagcmd=0;                       // Desactivo flag de comando pendiente.
   printf("Recibido");
   enable_interrupts(int_rda);            
}


void Port_Init()
{
   set_tris_b(0x00);
   set_tris_d(0x00);
   set_tris_a(0x00);
   output_b(0x00);
   output_d(0x00);
   output_a(0x00);
}




void MCU_Init()
{
   printf("Conectado....*");
   Port_Init();
   //Procesos_Init();
   inte_Init();
   setup_spi(FALSE);
   setup_psp(PSP_DISABLED);
   setup_comparator(NC_NC_NC_NC);
   setup_vref(FALSE);
   port_b_pullups(FALSE);
}


void main()
{
   MCU_Init();   
   while(TRUE)
   {  
      if(flagcmd){
         procesa_cmd();
      }
      //delay_ms(100);
      //printf("Recibido");     // se envia por Serial una palabra para verificar interrupcion
      //TODO: User Code
   }

}
